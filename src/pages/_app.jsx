import "@/styles/globals.css";
import { Montserrat } from "next/font/google";
import { ToastProvider, useToast } from "@/components/hooks/useToast";
import Header from "@/components/component/Header/Header";
import ThemeSwitcher from "@/components/component/Header/ThemeSwitcher";
import ThemeProvide from "@/components/component/Header/ThemeProvide";
import Head from "next/head";
import "@/styles/globals.css";
import { BackgroundBeamsWithCollisionDemo } from "@/components/component/Footer/BackgroundBeamsWithCollisionDemo";
import { CountryProvider } from "@/components/context/CountryContext";
import { Provider } from "react-redux";
import store from "@/store/store";
import { useRouter } from "next/router";
import HotelHeader from "./Hotels/components/Header/HotelHeader";
import { HotelCityProvider } from "@/components/context/HotelCityContext";
import { HotelDetailsIdProvider } from "@/components/context/HotelDetailsId";
import { HotelSearchProvider } from "@/components/context/HotelSearch";
import { useState, useEffect } from "react";
import { Toaster } from "react-hot-toast";
import { DepartureAirportProvider } from "@/components/context/DepartureAirportContext";
import { ArrivalAirportProvider } from "@/components/context/ArrivalAirportContex";

export const metadata = {
  title: "MakeMyTrip App",
  description: "Generated by create next app",
};

const montserrat = Montserrat({
  subsets: ["latin"],
  variable: "--font-mont",
});

export default function App({ Component, pageProps }) {
  const router = useRouter();
  const [isMounted, setIsMounted] = useState(false);

  useEffect(() => {
    setIsMounted(true); // Mark as mounted on client-side
  }, []);

  if (!isMounted) return null; // Avoid rendering until fully mounted

  let header;
  switch (router.pathname) {
    case "/":
      header = <Header />;
      break;
    case "/Hotels":
      header = <HotelHeader />;
      break;
    case "/Hotels/HotelDetails/[id]":
      header = <HotelHeader />;
      break;
    case "/Hotels/Wishlist":
      header = <HotelHeader />;
      break;
    case "/Hotels/Prebooking":
      header = <HotelHeader />;
      break;
    case "/Hotels/Checkout":
      header = <HotelHeader />;
      break;
    case "/Hotels/Mybooking":
      header = <HotelHeader />;
      break;
    default:
      header = <Header />;
  }

  return (
    <>
      <Head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="" />
      </Head>
      <main className={`${montserrat.variable} font-mont w-full min-h-screen`}>
        <ToastProvider>
          <ThemeProvide>
            <Provider store={store}>
              <DepartureAirportProvider>
                <ArrivalAirportProvider>
                  <CountryProvider>
                    <HotelDetailsIdProvider>
                      <HotelCityProvider>
                        <HotelSearchProvider>
                          {header}
                          <Toaster />
                          <ThemeSwitcher />
                          <Component {...pageProps} />
                          <BackgroundBeamsWithCollisionDemo />
                        </HotelSearchProvider>
                      </HotelCityProvider>
                    </HotelDetailsIdProvider>
                  </CountryProvider>
                </ArrivalAirportProvider>
              </DepartureAirportProvider>
            </Provider>
          </ThemeProvide>
        </ToastProvider>
      </main>
    </>
  );
}
